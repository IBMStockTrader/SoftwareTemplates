---
openapi: 3.1.0
components:
  schemas:
    ${{ values.name }}:
      type: object
      properties:
        id:
          type: string
        owner:
          type: string
        loyalty:
          type: string
        balance:
          type: number
          format: double
        commissions:
          type: number
          format: double
        free:
          type: integer
          format: int32
        sentiment:
          type: string
        nextCommission:
          type: number
          format: double
        operation:
          type: string
    Feedback:
      type: object
      properties:
        message:
          type: string
        free:
          type: integer
          format: int32
        sentiment:
          type: string
    WatsonInput:
      type: object
      properties:
        text:
          type: string
  securitySchemes:
    SecurityScheme:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Authentication
paths:
  /${{ values.name }}:
    get:
      parameters:
        - name: owners
          in: query
          schema:
            type: array
            items:
              type: string
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/${{ values.name }}"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      summary: Get All ${{ values.name }}s
      tags:
        - ${{ values.name }} Service
      security:
        - SecurityScheme:
            - StockTrader
            - StockViewer
  /${{ values.name }}/{id}:
    put:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: total
          in: query
          schema:
            type: number
            format: double
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/${{ values.name }}"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      summary: Update ${{ values.name }}
      tags:
        - ${{ values.name }} Service
      security:
        - SecurityScheme:
            - StockTrader
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: total
          in: query
          schema:
            type: number
            format: double
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/${{ values.name }}"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      summary: Get ${{ values.name }}
      tags:
        - ${{ values.name }} Service
      security:
        - SecurityScheme:
            - StockTrader
            - StockViewer
    delete:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/${{ values.name }}"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      summary: Delete ${{ values.name }}
      tags:
        - ${{ values.name }} Service
      security:
        - SecurityScheme:
            - StockTrader
  /${{ values.name }}/{id}/feedback:
    post:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WatsonInput"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feedback"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
        "400":
          description: Bad Request
      summary: Submit Feedback
      tags:
        - ${{ values.name }} Service
      security:
        - SecurityScheme:
            - StockTrader
  /${{ values.name }}/{owner}:
    post:
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/${{ values.name }}"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      summary: Create ${{ values.name }}
      tags:
        - ${{ values.name }} Service
      security:
        - SecurityScheme:
            - StockTrader
info:
  title: ${{ values.name }} API
  version: ${{ values.version }}
servers:
  - url: http://localhost:9080
    description: Auto generated value
  - url: http://0.0.0.0:9080
    description: Auto generated value
